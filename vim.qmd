---
title: Text editors (Vim)
number-sections: true
---

## Starting Vim

Vim is a text editor. That is all it does. You cannot format a document, insert shapes, make a table with lines, use multiple fonts, highlight sentences, or print out with headings or margins. Vim, however, is very good at editing text. Once you’ve mastered Vim, it is very powerful. You can find and replace chunks of text using commands, copy and paste columns of data, and jump to a specified line number.

Vim is also everywhere. If you are working on a computer with a shell (such as terminal or gitbash), then you have Vim; it’s already there. And you can open it directly from the shell. The problem is, however, that Vim is notoriously difficult to learn.

Let’s create a new file with Vim. First, open your shell, then type:

``` bash
vim new-file.txt
```

Yay, a new file! Now, close that file. Type:

``` txt
:q
```

Ta-da! Congratulations, you’ve exited vim.

## Text editing

So, you’ve created and exited a file with Vim. Your next challenge is to put some text inside the file. Open your file again:

``` bash
vim new-file.txt
```

Now, try and type some text. What’s happening? You are currently in **Normal** (or ‘control’) mode. To add text, you need to be in **Insert** or ‘edit’ mode.

To enter Insert mode, type `i`. You can now type! Add some text:

``` txt
Yay I can now add words to my file! This wasn't difficult at all!
```

How do you save your work? `ctrl` + `s` will not help you. First, you need to go back to Normal mode by pressing `esc`, then type:

``` txt
:w
```

(If you spend too much time working in Vim, your text documents start to accumulate random `:w` in them.) Now, you can safely quit vim again:

``` txt
:q
```

Practice this. Re-open your vim document, enter insert mode, and add some more random text.

There is also a command for saving and exiting all in one instruction. Press `esc`, then type:

``` txt
:x
```

Phew! You had little control over *where* your new text went in the last exercise. How do you move around in vim? In Normal mode, you can move one character at a time using your arrow keys, or the keys `k` (up), `l` (right), `h` (left), and `j` (down).

Once you are in place, type `i` to enter Insert mode on the left-hand-side of the current character. You can also type `a` to enter Insert mode on the right-hand-side (think (`a`)fter the character). Try this out and add some more text.

::: {.callout-tip title="Summary of Vim modes"}
Vim has several modes. For our purposes, the Normal mode and Insert mode are the most important.

-   **Normal mode** is the default mode for navigating and manipulating text.
    -   To enter, press `Esc` from any other mode.
    -   Use this mode for moving around the file, deleting text, copying, pasting, and other commands.
-   **Insert mode** is used for inserting and editing text.
    -   To enter this mode, press `i`, `I`, `a`, `A`, `o`, or `O` from Normal mode.
    -   Use this mode to type text directly into the document.
:::

## Useful shortcuts

-   `/pattern` searches forward from the current cursor position for the text matching `pattern`. Press `/`, type the search term (pattern), and press `Enter`.
    -   To search for the word "example": first, ensure you are in Normal mode by pressing `esc`. Then type `/example` and press `Enter`.
    -   To navigate search results, `n` moves to the next occurrence of the search pattern.
    -   `N` moves to the previous occurrence of the search pattern.
-   `?pattern` searches backward from the current cursor position for the text matching `pattern`. Press `?`, type the search term (pattern), and press `Enter`.
    -   To search backward for the word "example", you would type `?example` in Normal mode and press `Enter`.
